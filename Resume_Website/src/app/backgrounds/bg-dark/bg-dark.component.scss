:host {
  /* Cursor + motion variables */
  --mx: 50vw;
  --my: 50vh;
  --parx: 0px;  --pary: 0px;    /* foreground parallax */
  --parx2: 0px; --pary2: 0px;   /* midground parallax */

  --spin: 0deg;
  --noiseX: 0px;
  --noiseY: 0px;
  --glow: 4vmax;

  position: fixed;
  inset: 0;
  z-index: -1;
  display: block;
  pointer-events: none; /* background only */
}

/* Container that holds stacked layers */
.bg-dark-cool {
  position: absolute;
  inset: 0;
  overflow: hidden;
  isolation: isolate; /* improve blending correctness */
  background: radial-gradient(120vmax 120vmax at 50% -10%,
    #0b1324 0%, #0d1b2a 35%, #0a1120 60%, #070c16 100%);
}

/* Generic layer layout */
.layer {
  position: absolute;
  inset: 0;
  will-change: transform, opacity, background-position, background;
  transform: translate3d(0,0,0);
}

/* Base subtle gradient tinting */
.base {
  background:
    radial-gradient(100vmax 80vmax at 20% 0%, rgba(29, 78, 216, 0.08), transparent 60%),
    radial-gradient(100vmax 80vmax at 80% 100%, rgba(16, 185, 129, 0.08), transparent 60%);
  mix-blend-mode: screen;
}

/* Aurora: slow conic gradient that rotates and breathes */
.aurora {
  background:
    conic-gradient(from 180deg at 50% 50%,
      rgba(56, 189, 248, 0.0) 0deg,
      rgba(56, 189, 248, 0.10) 30deg,
      rgba(192, 132, 252, 0.12) 90deg,
      rgba(34, 197, 94, 0.10) 150deg,
      rgba(56, 189, 248, 0.0) 210deg,
      rgba(99, 102, 241, 0.08) 260deg,
      rgba(56, 189, 248, 0.0) 360deg);
  filter: blur(50px) saturate(120%);
  transform: translate(var(--parx2), var(--pary2)) rotate(var(--spin));
  opacity: 0.9;
}

/* Grid: ultra-fine lines with slight parallax for depth */
.grid {
  --grid-c: rgba(255, 255, 255, 0.04);
  background-image:
    linear-gradient(to right, var(--grid-c) 1px, transparent 1px),
    linear-gradient(to bottom, var(--grid-c) 1px, transparent 1px);
  background-size: 40px 40px, 40px 40px;
  background-position: calc(var(--parx2) / 2) calc(var(--pary2) / 2);
  mask-image: radial-gradient(100vmax 100vmax at 50% 50%, #000 60%, transparent 100%);
  opacity: 0.5;
}

/* Noise: drifting film grain to keep things from feeling static */
@keyframes noiseShift {
  from { background-position: 0 0, 0 0; }
  to   { background-position: 100% 0, 0 100%; }
}
.noise {
  background-image:
    url("data:image/svg+xml;utf8,\
<svg xmlns='http://www.w3.org/2000/svg' width='120' height='120' viewBox='0 0 120 120'>\
  <filter id='n'><feTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='2' stitchTiles='stitch'/></filter>\
  <rect width='120' height='120' filter='url(%23n)' opacity='0.12'/>\
</svg>");
  background-size: 300px 300px;
  animation: noiseShift 18s linear infinite;
  transform: translate(var(--noiseX), var(--noiseY));
}

/* Blobs: soft shapes that drift with parallax for foreground depth */
.blobs {
  filter: blur(20px) saturate(120%);
  transform: translate(var(--parx), var(--pary));
  mix-blend-mode: screen;
}
.blobs .blob {
  position: absolute;
  width: 42vmax; height: 42vmax;
  border-radius: 50%;
  opacity: 0.12;
  transform: translate3d(0,0,0) scale(1);
}
.blobs .b1 {
  left: -10vmax; top: -6vmax;
  background: radial-gradient(circle at 30% 30%, #60a5fa, transparent 60%);
}
.blobs .b2 {
  right: -12vmax; top: 10vmax;
  background: radial-gradient(circle at 70% 30%, #a78bfa, transparent 65%);
}
.blobs .b3 {
  left: 10vmax; bottom: -12vmax;
  background: radial-gradient(circle at 40% 60%, #34d399, transparent 60%);
}

/* Spotlight: gentle lens that follows the cursor */
.spotlight {
  background:
    radial-gradient(
      circle at var(--mx) var(--my),
      rgba(255, 255, 255, 0.09) 0%,
      rgba(255, 255, 255, 0.04) var(--glow),
      rgba(255, 255, 255, 0.0) calc(var(--glow) * 2)
    );
  mix-blend-mode: soft-light;
}

/* Vignette: pull attention toward the middle */
.vignette {
  background:
    radial-gradient(100vmax 100vmax at 50% 50%,
      transparent 60%,
      rgba(0, 0, 0, 0.25) 85%,
      rgba(0, 0, 0, 0.6) 100%);
}

/* Optional: respects reduced motion */
@media (prefers-reduced-motion: reduce) {
  .aurora, .noise { animation: none; }
  :host { --spin: 0deg; --noiseX: 0px; --noiseY: 0px; }
}
